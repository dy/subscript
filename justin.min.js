let e,r,t=t=>(e=0,r=t,t=n(),r[e]?l():t||""),l=(t="Bad syntax",l=r[e],a=r.slice(0,e).split("\n"),n=a.pop())=>{throw SyntaxError(`${t} \`${l}\` at ${a.length}:${n.length}`)},a=(t=1,l=e,a)=>{if("number"==typeof t)e+=t;else for(;a=t(r.charCodeAt(e));)e+=a;return r.slice(l,e)},n=(r=0,a,n,s,i,o)=>{for(;(n=t.space())&&(i=((o=c[n])&&o(s,r))??(!s&&t.id()));)s=i;return a&&(n==a?e++:l()),s},s=e=>e>=48&&e<=57||e>=65&&e<=90||e>=97&&e<=122||36==e||95==e||e>=192&&215!=e&&247!=e,i=t.space=t=>{for(;(t=r.charCodeAt(e))<=32;)e++;return t},o=t.id=e=>a(s),c=[],p=(t,l=32,a,n=t.charCodeAt(0),i=t.length,o=c[n],p=t.toUpperCase()!==t)=>c[n]=(n,c,h=e)=>c<l&&(i<2||r.substr(e,i)==t)&&(!p||!s(r.charCodeAt(e+i)))&&(e+=i,a(n,c))||(e=h,o?.(n,c)),h=(e,r,t)=>p(e,r,((l,a)=>l&&(a=n(r-!!t))&&[e,l,a])),f=(e,r,t)=>p(e,r,(l=>t?l&&[e,l]:!l&&(l=n(r-1))&&[e,l])),d=(e,r)=>p(e,r,((t,l)=>t&&(l=n(r))&&(t[0]===e&&t[2]?(t.push(l),t):[e,t,l])));const u=e=>Array.isArray(e)?g[e[0]](...e.slice(1)):r=>r?.[e],g={},m=(e,r,t=g[e])=>g[e]=(...e)=>r(...e)||t&&t(...e),A=e=>(e=t(e),r=>(e.call?e:e=u(e))(r)),b=(e,r,t)=>t[0]||t[1]?(r?p(e,r,t[0]):c[e.charCodeAt(0)||1]=t[0],m(e,t[1])):t.length?t.length>1?(h(e,Math.abs(r),r<0),m(e,((e,r)=>r&&(e=u(e),r=u(r),e.length||r.length?l=>t(e(l),r(l)):(e=t(e(),r()),()=>e))))):(f(e,r),m(e,((e,r)=>!r&&((e=u(e)).length?r=>t(e(r)):(e=t(e()),()=>e))))):(d(e,r),m(e,((...e)=>(e=e.map(u),r=>t(...e.map((e=>e(r)))))))),y=e=>e?l():["",(e=+a((e=>46===e||e>=48&&e<=57||(69===e||101===e?2:0))))!=e?l():e],C=(e,r,t,l)=>[e,r,[t=>t?["++"===e?"-":"+",[e,t],["",1]]:[e,n(r-1)],l=(e,r)=>"("===e[0]?l(e[1]):"."===e[0]?(r=e[2],e=u(e[1]),l=>t(e(l),r)):"["===e[0]?([,e,r]=e,e=u(e),r=u(r),l=>t(e(l),r(l))):r=>t(r,e)]],x=["",,[,e=>()=>e],'"',,[e=>e?l():["",(a()+a((e=>e-34?1:0))+(a()||l("Bad string"))).slice(1,-1)]],".",,[e=>!e&&y()],...Array(10).fill(0).flatMap(((e,r)=>[""+r,0,[y]])),",",1,(...e)=>e[e.length-1],"||",4,(...e)=>{let r,t=0;for(;!r&&t<e.length;)r=e[t++];return r},"&&",5,(...e)=>{let r=0,t=!0;for(;t&&r<e.length;)t=e[r++];return t},"+",12,(e,r)=>e+r,"-",12,(e,r)=>e-r,"*",13,(e,r)=>e*r,"/",13,(e,r)=>e/r,"%",13,(e,r)=>e%r,"|",6,(e,r)=>e|r,"&",8,(e,r)=>e&r,"^",7,(e,r)=>e^r,"==",9,(e,r)=>e==r,"!=",9,(e,r)=>e!=r,">",10,(e,r)=>e>r,">=",10,(e,r)=>e>=r,"<",10,(e,r)=>e<r,"<=",10,(e,r)=>e<=r,">>",11,(e,r)=>e>>r,">>>",11,(e,r)=>e>>>r,"<<",11,(e,r)=>e<<r,"+",15,e=>+e,"-",15,e=>-e,"!",15,e=>!e,...C("++",15,((e,r)=>++e[r])),...C("--",15,((e,r)=>--e[r])),"[",18,[e=>e&&["[",e,n(0,93)||l()],(e,r)=>r&&(e=u(e),r=u(r),t=>e(t)[r(t)])],".",18,[(e,r)=>e&&(r=n(18))&&[".",e,r],(e,r)=>(e=u(e),r=r[0]?r:r[1],t=>e(t)[r])],"(",18,[e=>!e&&["(",n(0,41)||l()],u],"(",18,[e=>e&&["(",e,n(0,41)||""],(e,r,t,l)=>null!=r&&(l=""==r?()=>[]:","===r[0]?(r=r.slice(1).map(u),e=>r.map((r=>r(e)))):(r=u(r),e=>[r(e)]),"."===e[0]?(t=e[2],e=u(e[1]),r=>e(r)[t](...l(r))):"["===e[0]?(t=u(e[2]),e=u(e[1]),r=>e(r)[t(r)](...l(r))):(e=u(e),r=>e(r)(...l(r))))]];for(;x[2];)b(...x.splice(0,3));let $={n:"\n",r:"\r",t:"\t",b:"\b",f:"\f",v:"\v"},v=t=>(n,s,i="")=>{for(n&&l("Unexpected string"),a();(s=r.charCodeAt(e))-t;)92===s?(a(),s=a(),i+=$[s]||s):i+=a();return a(),["",i]},E=["===",9,(e,r)=>e===r,"!==",9,(e,r)=>e!==r,"~",15,e=>~e,"?",3,[(e,r,t)=>e&&(r=n(2,58))&&["?",e,r,n(3)],(e,r,t)=>(e=u(e),r=u(r),t=u(t),l=>e(l)?r(l):t(l))],"??",6,(e,r)=>e??r,"?.",18,[e=>e&&["?.",e],e=>(e=u(e),r=>e(r)||(()=>{}))],"?.",18,[(e,r)=>e&&!(r=n(18))?.map&&["?.",e,r],(e,r)=>r&&(e=u(e),t=>e(t)?.[r])],"in",10,(e,r)=>e in r,'"',,[v(34)],"'",,[v(39)],"/*",20,[(t,l)=>(a((t=>42!==t&&47!==r.charCodeAt(e+1))),a(2),t||n(l))],"//",20,[(e,r)=>(a((e=>e>=32)),e||n(r))],"null",20,[e=>e?l():["",null]],"true",20,[e=>e?l():["",!0]],"false",20,[e=>e?l():["",!1]],"undefined",20,[e=>e?l():["",void 0]],";",20,[e=>n()||[""]],"**",-14,(e,r)=>e**r,"[",20,[e=>!e&&["[",n(0,93)||""],(e,r)=>!r&&(e?","===e[0]?(e=e.slice(1).map(u),r=>e.map((e=>e(r)))):(e=u(e),r=>[e(r)]):()=>[])],"{",20,[e=>!e&&["{",n(0,125)||""],(e,r)=>e?","===e[0]?(e=e.slice(1).map(u),r=>Object.fromEntries(e.map((e=>e(r))))):":"===e[0]?(e=u(e),r=>Object.fromEntries([e(r)])):(r=u(e),t=>({[e]:r(t)})):e=>({})],":",1.1,[(e,r)=>[":",e,n(1.1)||l()],(e,r)=>(r=u(r),e=Array.isArray(e)?u(e):(e=>e).bind(0,e),t=>[e(t),r(t)])]];for(;E[2];)b(...E.splice(0,3));export{h as binary,u as compile,r as cur,A as default,l as err,n as expr,o as id,e as idx,s as isId,c as lookup,d as nary,m as operator,g as operators,t as parse,b as set,a as skip,i as space,p as token,f as unary};